class Utils {

    /**
     * Generate UUID for session
     */
    generateUUID() {
        var dt = new Date().getTime();
        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
            var r = (dt + Math.random() * 16) % 16 | 0;
            dt = Math.floor(dt / 16);
            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
        });
        return uuid;
    }


    /**
     * process jwt token and return object
     * @param {string} token 
     */
    parseJwt(token) {
        try {
            // Get Token Header
            const base64HeaderUrl = token.split('.')[0];
            const base64Header = base64HeaderUrl.replace('-', '+').replace('_', '/');
            const headerData = JSON.parse(window.atob(base64Header));

            // Get Token payload and date's
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace('-', '+').replace('_', '/');
            const dataJWT = JSON.parse(window.atob(base64));
            dataJWT.header = headerData;

            return dataJWT;
        } catch (err) {
            return false;
        }
    }

    isJsonString(str) {
        try {
            let obj = JSON.parse(str);
        } catch (e) {
            return false;
        }
        return true;
    }
}
module.exports = Utils